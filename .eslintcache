[{"C:\\Users\\murat.ucar\\Documents\\yarn\\tic-tac-toe\\src\\App.js":"1","C:\\Users\\murat.ucar\\Documents\\yarn\\tic-tac-toe\\src\\index.js":"2"},{"size":2459,"mtime":1609484425364,"results":"3","hashOfConfig":"4"},{"size":199,"mtime":1607109933552,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1nlvmct",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\murat.ucar\\Documents\\yarn\\tic-tac-toe\\src\\App.js",["11","12"],"import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    turn: \"X\",\n    gameStatus: false,\n    board: Array(9).fill(\"\"),\n    movingCount: 0,\n    winning: \"\",\n  };\n\n  handleClick(event) {\n    if (this.state.gameStatus===true) {\n      return\n    }\n    if (this.state.board[event.target.dataset.square] === \"\") {\n      this.state.board[event.target.dataset.square] = this.state.turn;\n\n      event.target.innerText = this.state.turn;\n      this.setState({\n        turn: this.state.turn === \"X\" ? \"O\" : \"X\",\n        board: this.state.board,\n        movingCount: ++this.state.movingCount,\n      });\n\n    }\n\n    var result = this.control();\n    if (result === \"X\") {\n      this.setState({\n        gameStatus: true,\n        winning: \"X\",\n      });\n    } else if (result === \"O\") {\n      this.setState({\n        gameStatus: true,\n        winning: \"O\",\n      });\n    } else if(this.state.movingCount === 9){\n      this.setState({\n        gameStatus: true,\n        winning: \"Scoreless\",\n      });\n    }\n    \n  }\n  control() {\n    var board = this.state.board;\n    var winningRules = [\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n    ];\n\n    for (let i = 0; i < winningRules.length; i++) {\n      if (\n        board[winningRules[i][0]] === board[winningRules[i][1]] &&\n        board[winningRules[i][1]] === board[winningRules[i][2]]\n      ) {\n        return board[winningRules[i][0]];\n      }\n      if (this.state.movingCount === 9) {\n        return \"Scoreless\";\n      }\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"game\">\n        <div id=\"state\">{this.state.winning}</div>\n          <div id=\"head\"> Tic Tac Toe</div>\n          <div id=\"board\" onClick={(e) => this.handleClick(e)}>\n            <div className=\"square\" data-square=\"0\"></div>\n            <div className=\"square\" data-square=\"1\"></div>\n            <div className=\"square\" data-square=\"2\"></div>\n            <div className=\"square\" data-square=\"3\"></div>\n            <div className=\"square\" data-square=\"4\"></div>\n            <div className=\"square\" data-square=\"5\"></div>\n            <div className=\"square\" data-square=\"6\"></div>\n            <div className=\"square\" data-square=\"7\"></div>\n            <div className=\"square\" data-square=\"8\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\murat.ucar\\Documents\\yarn\\tic-tac-toe\\src\\index.js",[],{"ruleId":"13","severity":1,"message":"14","line":18,"column":7,"nodeType":"15","endLine":18,"endColumn":23},{"ruleId":"13","severity":1,"message":"14","line":24,"column":24,"nodeType":"15","endLine":24,"endColumn":34},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression"]